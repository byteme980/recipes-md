{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/RecipeLink.tsx","webpack://gatsby-starter-default/./src/pages/index.js"],"names":["recipe","className","frontmatter","imageUrl","src","Link","to","slug","title","edges","data","allMarkdownRemark","recipesByType","useMemo","map","breakfast","lunch","dinner","snacks","dessert","forEach","edge","mealType","node","Object","keys","includes","push","console","error","recipeTypesToRender","filter","type","length","key","id"],"mappings":"wMAUA,EAPmB,SAAC,GAAD,IAAGA,EAAH,EAAGA,OAAH,OACjB,uBAAKC,UAAU,eACZD,EAAOE,YAAYC,UAAY,uBAAKC,IAAKJ,EAAOE,YAAYC,WAC7D,gBAAC,EAAAE,KAAD,CAAMC,GAAIN,EAAOE,YAAYK,MAAOP,EAAOE,YAAYM,S,oBCmD3D,EAnDkB,SAAC,GAIZ,IAFkBC,EAEnB,EAHJC,KACEC,kBAAqBF,MAGjBG,GAAgBC,cAAQ,WAC5B,IAAMC,EAAM,CACVC,UAAW,GACXC,MAAO,GACPC,OAAQ,GACRC,OAAQ,GACRC,QAAS,IAcX,OAZAV,EAAMW,SAAQ,SAACC,GACb,IAAMC,EAAWD,EAAKE,KAAKrB,YAAYoB,SAElCE,OAAOC,KAAKX,GAAKY,SAASJ,GAO/BR,EAAIQ,GAAUK,KAAKN,GANjBO,QAAQC,MAAR,+BACiCR,EAAKE,KAAKrB,YAAYoB,aAOpDR,IACN,CAACL,IAEEqB,EAAsBN,OAAOC,KAAKb,GAAemB,QACrD,SAACC,GAAD,OAAUpB,EAAcoB,GAAMC,OAAS,KAGzC,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKzB,MAAM,gBACX,uBAAKP,UAAU,iBACZ6B,EAAoBhB,KAAI,SAACQ,GACxB,OACE,2BAASY,IAAKZ,GACZ,0BAAKA,GACJV,EAAcU,GAAUR,KAAI,SAACO,GAAD,OAC3B,gBAAC,EAAD,CAAYa,IAAKb,EAAKE,KAAKY,GAAInC,OAAQqB,EAAKE","file":"component---src-pages-index-js-13feaefa6f26b6a6f5c1.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\n\nconst RecipeLink = ({ recipe }) => (\n  <div className=\"recipe-link\">\n    {recipe.frontmatter.imageUrl && <img src={recipe.frontmatter.imageUrl} />}\n    <Link to={recipe.frontmatter.slug}>{recipe.frontmatter.title}</Link>\n  </div>\n);\n\nexport default RecipeLink;\n","import React, { useMemo } from 'react';\nimport { graphql } from 'gatsby';\nimport RecipeLink from '../components/RecipeLink';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst IndexPage = ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) => {\n  const recipesByType = useMemo(() => {\n    const map = {\n      breakfast: [],\n      lunch: [],\n      dinner: [],\n      snacks: [],\n      dessert: [],\n    };\n    edges.forEach((edge) => {\n      const mealType = edge.node.frontmatter.mealType;\n\n      if (!Object.keys(map).includes(mealType)) {\n        console.error(\n          `unknown mealType for recipe ${edge.node.frontmatter.mealType}`\n        );\n        return;\n      }\n\n      map[mealType].push(edge);\n    });\n    return map;\n  }, [edges]);\n\n  const recipeTypesToRender = Object.keys(recipesByType).filter(\n    (type) => recipesByType[type].length > 0\n  );\n\n  return (\n    <Layout>\n      <SEO title=\"All recipes\" />\n      <div className=\"recipes-index\">\n        {recipeTypesToRender.map((mealType) => {\n          return (\n            <section key={mealType}>\n              <h2>{mealType}</h2>\n              {recipesByType[mealType].map((edge) => (\n                <RecipeLink key={edge.node.id} recipe={edge.node} />\n              ))}\n            </section>\n          );\n        })}\n      </div>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n            title\n            mealType\n            imageUrl\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}